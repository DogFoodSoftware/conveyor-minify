#!/bin/bash

set -e

source /etc/environment
source $CONVEYOR_CORE/src/lib/conveyor-libs.sh

CONVEYOR_DATA="$HOME/data"

MINIFY_GITHUB_REF="mrclay/minify"
MINIFY_REV="db7fe244932ea77cf1438965693672ea12b33da8"
MINIFY_SHA256="1a1567vpbjb8q71pxsr4kpnw1qvi9p7i61pky8mp4m27z4hh6h4r"
MINIFY_APP_HOME="${CONVEYOR_DATA}/apps/DogFoodSoftware/minify"

GITHUB_REF="DogFoodSoftware/conveyor-minify"
CONVEYOR_MINIFY_REV="master"
PROJECT_HOME="${PLAYGROUND}/${GITHUB_REF}"

function usage() {

    echo "Installs minify for a Conveyor environment. May also work"

    echo "with standard Ubuntu environments with Nginx installed when"
    echo "run as 'root'."
    echo
    echo "install [-p <dir>] [-m <git rev>]"
    echo
    echo "Options:"
    echo
    echo "--minify-rev|-m <git rev>"
    echo "  Overrides default minify version to checkout."
}

TMP=`getopt --name=$0 -a --longoptions=minify-rev -o m -- $@`
eval set -- $TMP

until [ $1 == -- ]; do
    case "$1" in
	-m|--minify-rev)
	    MINIFY_REV="$2"
	    shift;;
    esac
    shift
done
shift

# In case this is NOT a conveyor enviorment, we need to create some
# dirs for this stuff to live in.
for i in "$PLAYGROUND" \
         "$CONVEYOR_DATA/apps"; do
    if [ ! -d "$i" ]; then
	mkdir -p "$i"
    fi
done

# Now grab the actual minify app
cd "$CONVEYOR_DATA/apps/"
if [ ! -d DogFoodSoftware ]; then
    mkdir DogFoodSoftware
fi
cd DogFoodSoftware
git clone -o $MINIFY_REV --depth 1 https://github.com/${MINIFY_GITHUB_REF}.git minify

cd "$PLAYGROUND"
# We checkout via HTTPS in case the 'ssh-agent' isn't available when
# the script is run; such as when the script is run with an alternate
# user using 'sudo'.
git clone -b $CONVEYOR_MINIFY_REV --depth 1 https://github.com/${GITHUB_REF}.git $GITHUB_REF
# But then swtich to SSH for easy updates for those with authorized keys.
cd "$GITHUB_REF"
git remote set-url origin git@github.com:${GITHUB_REF}.git

for i in `ls ${PROJECT_HOME}/conf/service-*.nginx.conf`; do
    if [ -L /etc/nginx/services/`basename $i` ]; then
        rm /etc/nginx/services/`basename $i`
    elif [ -f /etc/nginx/services/`basename $i` ]; then
        echo "Found probable manual update of '/etc/nginx/services/`basename $i`'; leaving in place." >&2
        echo "Consider removing and running:" >&2
        echo -e "\tln -s "$i" /etc/nginx/services" >&2
    else
        ln -s "$i" /etc/nginx/services
    fi
done

for i in `ls "${PROJECT_HOME}/src"`; do
    chmod u+w "${MINIFY_APP_HOME}/min/$i"
    cp "${PROJECT_HOME}/src/$i" "${MINIFY_APP_HOME}/min"
    chmod u-w "${MINIFY_APP_HOME}/min/$i"
done

mkdir -p ${MINIFY_APP_HOME}/cache;

con_doc_link $PROJECT_HOME/documentation /DogFoodSoftware.conveyor-minify
ln -s $PLAYGROUND/DogFoodSoftware/conveyor-minify $DOCUMENTATION_HOME/DogFoodSoftware.conveyor-minify/src
